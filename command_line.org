* 快捷键
** 光标移动  
 C-f/b : 光标前进/后退一个字符.
 M-f/b : 光标前进/后退一个单词.
 C-a/e : 光标移动到行首/尾.  

 C-d : 删除光标下字符.
 C-k/u : 剪切光标起到行末/首部分.
 M-d/Backspacne : 剪切光标右/左一个单词.
 C-y : 粘贴.

 c/M-t : 交换光标前后两个字符/单词的位置.
 M-l/u/c : 将光标起一个单词置为小写/大写/首字母大写.

** 补全 : 可以补全路径,变量,用户名,命令.
 M-* : 插入所有可能的补全.
 
* 命令行历史
  history : 查看命令行历史.(保存在用户主目录下的.hash_history中). history | grep 关键词 : 查看命令行历史中包含关键词的记录.
  ![行数] : 将执行命令行历史中的第'行数'的命令.
  !! : 重复执行最近一条命令.
  ![关键词] : 重复执行最近一条以'关键词'开头的命令.(谨慎使用)
  !?[关键词] : 重复执行最近一条包含'关键词'的命令.(谨慎使用) 

  C-p/n : 前/后一个历史命令.
  M-</> : 第一个/最后一个历史命令.
  C-o : 执行当前历史命令并前进到下一条历史命令.
  
** 查找历史命令:
  C-r [关键词] : 递增地查找包含关键词的命令行历史.
  M-n/p [关键词] : 非递增的正/反向查找包含关键词的命令行历史.

  在查找过程中:
  C-r : 寻找上一个历史命令.
  RET : 执行找到的历史命令.
  C-j : 将找到的历史命令拷贝到当前命令行上.
  C-h : 删除关键词的最后一个字符.
  C-g : 退出查找过程.

* 基本操作

  在同一个命令行上可以执行多条命令,命令间用';'分隔.
  C-M-f1~f6 : 切换到文字终端.
  M-f1~f6   : 在文字终端间切换.
  M-f7      : 切换回图形界面.
  
* 文件操作

  pwd : 显示当前工作目录.(print working directory)
  file [文件] [文件] ... : 查看文件类型.
** less [文件名] : 查看文本文件内容.
    SPC/b : 向下/上翻一页.
    上/下方向键 ： 光标向上/下一行.
    g/G : 文档首/尾.
    / [字符串] : 查找字符串.
    n : 反向查找.
    h : 帮助.
    q : 退出less.
** ls [目录1] [目录2] ...  : 列出目录中的内荣.

    -a : 显示所有文件,包括隐藏文件.
    -l : 以长格式显示,包括权限,大小,修改日期等信息.
    -d : 显示目录本身的信息,而不是目录中的内容.
    -t : 按照文件的修改日期排序.(由新到旧)
    -S : 按照文件的大小排序.(由大到小)
    -r : 反序列出文件.
    -h : 以便于阅读的方式显示文件大小信息.
    -F : 在列出的文件末尾加上特殊字符说明该文件种类.
    -i : 显示inode号.
** mkdir [目录1] [目录2] ... : 新建目录1,目录2,...
** rmdir [空目录] : 删除空目录.
** cd [目录] : 切换当前工作目录.

   绝对路径 : 起始于根目录.
   相对路径 : 起始于当前工作目录.
   "."  : 工作目录.(进入工作目录中的目录时,可以省略"./")
   ".." : 工作目录的父目录.
   "-"  : 前一个工作目录.
   "~"  : 当前用户的主目录.
   "~用户名" : 某个用户的主目录.
   
   mkdir [目录1] [目录2] [目录3] ... : 创建目录.
** cp 文件1 文件2;  cp 多个文件/目录 目录

   -a : 保留源文件所有属性.
   -i : 当目标文件已存在时,询问.(默认不询问,直接覆盖)
   -r : 拷贝目录.
   -u : 当目标文件不存在,或源文件比目标文件新时才拷贝.
   -v : 显示拷贝时的信息.
   
** mv 文件1 文件2; mv 多个文件/目录 目录
   -i : 如果目标文件存在,则询问.
   -u : 如果目标文件不存在,或比源文件旧,则更新.
   -v : 显示移动信息.
   
** rm [文件/目录]
   -i : 删除前要求确认.
   -r : (递归)删除目录.
   -f : 强制删除,忽略不存在文件.覆盖'-i'选项.
   -v : 显示过程信息.

** ln [目标文件] [链接] : 为目标文件创立连接,默认为硬链接.
   -s : 创建符号链接,此时[目标文件]必须用绝对路径,或相对于[链接文件]的相对路径来描述.
   
* I/O 重定向

** 重定向
  重定向标准输入
  命令 < 文件 : 将标准输入重定向到指定文件.
  
  重定向标准输出
   命令 >(>>) 文件 : 将命令的输出结果(以追加方式)重定向到指定文件.(注: 使用'>',若命令为空,则会清除指定文件内容.)
   
   重定向标准错误
   命令 2>(2>>) 文件 : 将命令的出错信息(以追加方式)重定向到指定文件.(注: 使用'>',若命令为空,则会清除指定文件内容.)
   
   同时重定向标准输出和标准错误
   命令 &> 文件 : 将命令的输出结果及出错信息同时重定向到指定文件.
   
   cat file1 file2 ... : 将file1,file2,...输出到标准输出,若无文件参数,则从标准输入读取.(可通过重定向,将多个文件拼接成一个文件)
   /dev/null : 将输出重定向到这里表示丢弃.

   命令1 | 命令2 : 将命令1的输出通过管道作为命令2的输入.

** 过滤器
 sort : 对文本行进行排序.并不改变文件本身."-r":逆序输出.
 uniq : 去除重复的行."-d": 只显示重复的行.
 wc : 查看文本的行,单词,字节数."-l":只显示行数."-c":只显示字节数."-m":只显示字符数."-w":只显示单词数.
 grep 'pattern': 输出包含"pattern"的行."-i":忽略大小写."-v":仅输出不匹配的行.
 head/tail -n [数字] [文件] : 查看文件的前/后[数字]行(默认为10行).可用于管道.
 tail -f [文件] : 即时输出文件变化后追加的数据.
 tee : 将标准输入复制到每个指定文件,并显示到标准输出,常用于将pipe中的数据的分流到不同文件."-a":追加而非覆盖》

** 常用组合
   ls -l [-R] [目录] | grep '^-' | wc -l : 统计某目录下普通文件的个数.[-R]表示包括子目录内的目录.
   ls -l [-R] [目录] | grep '^d' | wc -l : 统计某目录下目录文件的个数.[-R]表示包括子目录内的文件.
   
* 查看命令自身信息

  type [命令名] : 识别该命令的种类: 可执行程序; shell内建命令; shell函数; 命令别名.
  which [命令名] : 查看命令的所在位置.(只能用于查看上述的可执行程序)
  help [shell内建命令] : 查看shell内建命令的帮助信息.
  [命令] --help : 查看命令的帮助信息.
  apropos [关键词] : 查看和该关键词有关的命令及其man编号
  whatis [命令名] : 查看命令的简单描述.
  info coreutils : 查看系统的info文档.
  alias [name='string'] : 为命令起别名.'='两边不允许有空格.
  alias : 查看系统内所有别名.
  unalias [别名] : 清除别名.

**  man [编号] [命令名] : 查看命令的man page.
    [编号] : 1.用户命令
    2.系统内核接口
    3.c库接口
    4.设备和驱动文件
    5.文件格式
    6.游戏
    7.其他
    8.管理员命令

* 命令行扩展

  echo: 用于查看命令行的扩展.
    -e: 允许解析转义序列. 如: echo -e "time's up\a" 

** 通配符(路径扩展):
    [[[[:upper:]]]]* : 以大写字母开头的所有文件.
    .* : 所有隐藏文件.
    .[!.]?* : 同上,但不包括"."和"..".(以'.'开头,第二个i字符不是'.',至少两个字符,后面可以接任意字符)
    
** 波浪线扩展
   ~ : 当前用户的主目录.
   ~[user] : 指定用户的主目录.
   
** 算术扩展: $((expression))
   仅支持整数运算: +, -, *, /, **(指数)
   $(((5**2)*3)) = 75
   
** 花括号扩展:
   
   ','分隔不同的元素
   Front-{A,B,c}-Back :
   Front-A-Back Front-B-Back Front-C-Back
   
   '..'表示一个范围
   Number_{1..5} :
   Number_1 Number_2 Number_3 Number_4 Number_5

   {Z..A} :
   Z Y X W V U T S R Q P O N M L K J I H G F E D C B A

   花括号可以嵌套
   a{A{1,2},B{3,4}}b :
   aA1b aA2b aB3b aB4b
   
   主要用来产生具有特定格式的文件和目录
   mkdir {2007..2009}-0{1..9} {2007..2009}-{10..12}
   
** 变量扩展
   $变量名 : 若变量名不存在则扩展为空字符串.

** 命令替换
   允许将某个命令的输出设置为变量,作为另一个命令的参数:
   echo $(ls)
   ls -l $(which cp)
   file $(ls /usr/bin/* | grep zip) 

** 引号
   双引号: 空白字符在双引号内将保留自己的作用,而非作为分隔符.
   变量/转义字符仍会被扩展: echo "$USER $((2+2)) $(cal)"
   转义字符: \$, \&, \!, \\, 

   单引号: 将抑制所有扩展方式,将引号内的内容视为纯字符串.
   
* 权限
  id : 查看当前用户的各种id.
  su - [user] : 切换到user的账户下,并载入其操作环境.(不指定user则缺省为root). 使用exit命令返回到先前的用户.
  su - [user] -c '命令' : 登录到user账户执行命令后,退回到原用户. (一般: su - -c '命令', 表示登录到root账户执行命令)

  sudo '命令' : 按照事先配置好的权限执行命令,需要自身账户的密码. 在/etc/sudoers 配置权限.
  
  一般权限: 对文件和目录有不同的意义.
  'r' : 允许文件被打开和读取. 允许查看目录下的内容(同时要求对该目录有'x'权限).
  'w' : 允许文件被写入和截取. 允许在目录下生成/删除/重命名文件(同时要求对该目录有'x'权限).
  'x' : 允许文件作为可执行文件被执行. 允许进入(cd)该目录.
  
  特殊权限:
  setuid : 让该文件的执行者拥有该文件所有者(通常是root)的权限.
  setgid :
  
  

  文件类型
  '-' : 普通文件.
  'd' : 目录文件.
  'l' : 符号链接.(注: 所有符号链接文件所显示的读写权限都是"rwxrwxrwx",这是无意义的,其所指向的文件的权限才是有意义的)
  'c' : 字符设备文件.(如终端和modem)
  'b' : 块设备文件. (如硬盘和CD-ROM)

** chown : 改变文件的所有者(和组).
   chown owner file  将file的所有者改为owner,组不变.
   chown owner:group file  将file的所有者和组分别改为owner和group.
   chown :group file  将file的组改为group,所有者不变.
   chown owner: file  将file的所有者组改为owner,组改为owner登录时所在的组.

** chgrp : 改变文件的组.
   chgrp group file 将file的组改为group.
** chmod : 改变文件模式,只允许文件所有者或超级用户执行.
*** 八进制表示法:
   通过使用3个八进制数字,可以设定user,group,others的权限.
   0  000  ---
   1  001  --x
   2  010  -w-
   3  011  -wxm
   4  100  r--
   5  101  r-x
   6  110  rw-
   7  111  rwx 
   
   chmod 611 file1 file2 ... : 使file1, file2, ... 的模式变为'rw-r--r--'
   
*** 符号表示法:
   受影响的对象:
   u : user,用户,文件所有者.
   g : group,组,一个组里可以包含多名用户.
   o : others,其他人.
   a : all,所有人(ugo).

   操作:
   = : 设定权限.
   + : 添加权限.  
   - : 减少权限.
     
   chmod '对象'操作'权限' file1 file2 ... (如果不指定对象则默认为'a')
   例如:
   chmod u+x,go=rx file
   chmod -x file(等价于chmod a-x file)

** umask : 当一个文件产生时,设置其默认权限.
   由4个八进制数字组成. 后三个八进制数字分别对应u,g,o,每一个表示从原始权限中对应位置应该去掉的权限.
   文件的原始权限为: rw-rw-rw-
   若umask 0|002 则表示: o-w           	 即 rw-rw-r--
   若umask 0|022 则表示: g-w,o-w       	 即 rw-r--r-- 
   若umask 0|266 则表示: u-w,g-rw,o-rw 	 即 r--r--r-- 
   若umask 0|777 则表示: a-rwx         	 即 --------- 

   大多数时间下,不必修改umask,在某些安全级别较高的场合下才需要修改.

* 进程
  C-c : 终止当前正在运行的前台任务.(对其发送INT信号)
  C-z : 挂起当前正在运行的前台进程.(对其发送信号)
  
  程序名 & : 启动程序,并将其置于后台.(无法用C-c终止)
  
**  kill [-signal] PID/%jobnum : 向指定进程(可以有多个)发送指定信号.
    注:进程可以用PID或jobnum表示,信号可以用信号编号,信号名,或"SIG信号名"表示.
    必须是进程的所有者或root才能对进程发送信号.
    
    kill -l : 列出所有信号.
    signal:
           1 HUP : 
	   2 INT(interrup) : 终止程序.(C-c).
	   3 QUIT : 退出.
	   9 KILL : 强行终止进程(该信号无法被忽略).
	   11 SEGV : 段错误.
	   15 TERM(terminate) : kill命令的默认发送的信号,将终止指定进程. 
	   18 CONT(continue) : 恢复被STOP/TSTP命令挂起的进程.
	   19 STOP : 挂起进程(该信号无法被忽略).
	   20 TSTP(terminal stop) : 挂起进程.(该信号可以被忽略).(C-z)
	   28 WINCH(window change) : 由系统发出,当窗口大小发生变化时.
	   
**  ps : 显示当前进程状态的快照. 
    无参数时,仅显示被当前终端控制的进程.
    x : 显示所有进程(不顾终端).
    aux : 显示更多信息.
**  pstree : 显示进程树.
**  jobs : 显示正在运行的任务,及其jobnum.
**  fg/bg %jobnum : 将具有jobnum的进程置于前台/后台运行.
**  top : 动态监视当前计算机内进程的状况.
**  其它命令: vmstat,xload,tload.
* 环境
  printenv [环境变量]: 显示指定环境变量的值,如果未指定任何变量,则打印出所有变量的名称和值.
  
  set : 同时显示环境变量和shell变量.
  
  source .bashrc : 使更改立即生效.

** 常见环境变量
   PS1 : 命令行提示符格式.
   USER : 当前账户名.
* 磁盘管理
** 挂载
*** mount [- 选项] [设备(分区)] [挂载点] : 将指定设备分区挂载到指定挂载点上.
    注:同一个设备同时可以挂载到多个挂载点上,挂载点可以是已存在的目录,挂载后该目录原有内容将不可见.
    可用 sudo tail -f /var/log/syslog 查看插入到系统的设备名. 
    无参数时,列出当前已挂载的文件系统.每当U盘,移动硬盘,cd-rom等具有文件系统的设备插入系统时,可以用此命令查看. 显示结果格式: 设备名 on 挂载点 type 文件系统类型 (选项)
    选项:
    -t 文件系统类型
    
*** umount [设备(分区)] : 卸载指定设备(该设备不能被占用).
    卸载设备意味着将剩余数据写回设备,若不卸载直接拔除,可能造成数据丢失.
    
** 文件系统
*** 磁盘分区(fdisk)
    首先需要将待分区设备卸载掉(umount).
    fdisk [设备名] : 必须是整个设备名(/dev/sdb),而非设备的某个分区(/dev/sdb1).
    m : 显示选项信息.
    p : 显示当前设备的分区表. 其中的Id表示分区类型.
    l : 显示支持的分区类型.(常用类型:b(W95 FAT32), 83(Linux))
    t : 改变分区的系统id(即分区类型,由l选项获取).
    w : 将对分区表的改动写入设备,使之生效.
    q : 不做任何更改,退出.

*** 创建文件系统(mkfs)
    mkfs -t [文件系统类型] [设备(分区)] : 在指定设备分区上创建指定的文件系统.
    
*** 检测及修复文件系统(fsck)
    fsck [文件系统所在分区] : 检测及修复指定文件系统,需要先umount.
    
*** 拷贝数据(dd)
    dd if=[输入文件] of=[输出文件] [bs=块大小 count=块数量] : 将输入文件中,count个bs大小的数据块,复制到输出文件中.
    
* 安装包管理
  高级工具: apt-get,aptitude; 低级工具: dpkg.
  
  apt-get update : 更新软件源列表.
  apt-cache search [软件包名] : 查看指定软件包的相关信息(要先执行update).
  apt-get upgrade : 只是简单的更新包，不管这些依赖，它不和添加包，或是删除包(要先执行update).
  apt-get dist-upgrade : 可以根据依赖关系的变化，添加包，删除包.(要先执行update).
  apt-get install [软件包名] : 安装指定软件包(要先执行update).
  dpkg --install [下载好的软件包] : 安装已经下载好的软件包,并取代以前的版本(若已经安装过),但不解决依赖关系.
  apt-get remove [软件包名] : 删除指定软件包.
  dpkg --list : 查看已安装软件包列表.
  dpkg --status [软件包名] : 查看指定软件包是否已安装.
  apt-cache --show [软件包名] : 查看已安装软件包的信息.
  dpkg --search [文件名] : 查看指定文件是哪个软件包安装的.

* 时间和日期

  date : 显示当前日期和时间.
  cal : 显示当前月份的日历.

* 查看系统资源

  free : 查看内存使用状况.
  df : 产看磁盘使用状况.
			
* 通配符
  '*' : 匹配任意多个字符.
  '?' : 匹配任意一个字符.
  [字符集] : 匹配任一个属于字符集中的字符.
  [!字符集] : 匹配任一个不属于字符集中的字符.
  [字符类] : 匹配任一个属于字符类的字符.

  字符类: 一定要放在"[]"中使用.
  [:alnum:] : 任意字母或数字.
  [:alpha:] : 任意字母.
  [:digit:] : 任意数字.
  [:lower:] : 任意小写字母.
  [:upper:] : 任意大写字母.
   
* 常用目录及文件
**  /bin        : 存放用于系统启动和运行的二进制文件.
**  /boot    	: 存放linux内核文件,boot loader.
  /boot/vmlin	uz : linux 内核文件.
  /boot/grub/	grub.cfg : 用于配置boot loader.

**  /dev     	: 存放设备文件.
**  /etc     	: 存放系统配置文件.
    /etc/crontab : 设置自动化工作的运行时间.
***    /etc/fstab : 配置存储器及其挂载点.启动时自动挂载.
    (设备名,挂载点,文件系统类型,挂载选项,是否或何时由dump备份, 每当启动时被fsck检测的顺序(为0则不被检测).)
    
    /etc/passwd : 用户账户列表.
    /etc/group : 组群列表.
    /etc/shadow : 用户密码.
**  /usr/bi     : 存放可执行文件目录.
**  /lib        : 存放核心系统程序所使用的共享库文件.
**  /lost+found : 对文件系统进行恢复后,保存恢复的文件,一般情况下为空.
    一般位于该文件系统的根目录下,由fsck产生.
**  /media      : 现代linux系统中可移动媒体设备的自动挂载点.
**  /mnt        : 老的linux系统中可移动媒体设备的手动挂载点.
**  /opt        : 主要用于安装可选择的商业软件.
**  /proc       : 内核虚拟文件系统.
**  /root       : root账户的主目录.
**  /sbin       : 用于存放用于系统管理的可执行制程序.    
**  /tmp        : 用于存放临时文件.
**  /usr        : 放置大部分用户应用程序.
    /usr/bin    : 放置linux发行版自带的可执行程序.
    /usr/lib    : /usr/bin中程序所用的共享库.
    /usr/local  : 结构类似于/usr,但放置不是发行版自带的程序,而是后来安装的用于适用于全系统范围的应用程序.
    /usr/sbin   : 放置其他一些用于系统管理的可执行程序. 
    /usr/share  : 存放/usr/bin中程序所用的共享数据,例如：配置文件,图标,屏幕背景,声音文件等.
    /usr/share/doc : 放置已安装程序的文档.
    /usr/share/applications/default.lst : 
**  /var        : 放置可变数据,如日至,数据库,email等.
    /var/log    : 系统日至目录.
    /var/log/syslog : 系统日至.

* 压缩
  unzip [文件] -d [目录] : 将zip文件解压到指定目录.

* 其它
  clear : 清屏,等价于"C-l".
  sleep n : 让系统等待n秒钟.
  passwd user : 改变user的密码(需要root权限). 缺省为改变当前用户的密码.注:用root账户修改密码可以无视对密码形式的限制.

