* 快捷键
** 光标移动  
 C-f/b : 光标前进/后退一个字符.
 M-f/b : 光标前进/后退一个单词.
 C-a/e : 光标移动到行首/尾.  

 C-d : 删除光标下字符.
 C-k/u : 剪切光标起到行末/首部分.
 M-d/Backspacne : 剪切光标右/左一个单词.
 C-y : 粘贴.

 c/M-t : 交换光标前后两个字符/单词的位置.
 M-l/u/c : 将光标起一个单词置为小写/大写/首字母大写.

** 补全 : 可以补全路径,变量,用户名,命令.
 M-* : 插入所有可能的补全.
 
* 命令行历史
  history : 查看命令行历史.(保存在用户主目录下的.hash_history中). history | grep 关键词 : 查看命令行历史中包含关键词的记录.
  ![行数] : 将执行命令行历史中的第'行数'的命令.
  !! : 重复执行最近一条命令.
  ![关键词] : 重复执行最近一条以'关键词'开头的命令.(谨慎使用)
  !?[关键词] : 重复执行最近一条包含'关键词'的命令.(谨慎使用) 

  C-p/n : 前/后一个历史命令.
  M-</> : 第一个/最后一个历史命令.
  C-o : 执行当前历史命令并前进到下一条历史命令.
  
** 查找历史命令:
  C-r [关键词] : 递增地查找包含关键词的命令行历史.
  M-n/p [关键词] : 非递增的正/反向查找包含关键词的命令行历史.

  在查找过程中:
  C-r : 寻找上一个历史命令.
  RET : 执行找到的历史命令.
  C-j : 将找到的历史命令拷贝到当前命令行上.
  C-h : 删除关键词的最后一个字符.
  C-g : 退出查找过程.

* 基本操作

  在同一个命令行上可以执行多条命令,命令间用';'分隔.
  C-M-f1~f6 : 切换到文字终端.
  M-f1~f6   : 在文字终端间切换.
  M-f7      : 切换回图形界面.
  C-d : 退出shell.

* 文件操作

  pwd : 显示当前工作目录.(print working directory)
** file [文件] : 查看文件类型.
   -i : 查看文件字符集类型.
** less [文件名] : 查看文本文件内容.
    SPC/b : 向下/上翻一页.
    上/下方向键 ： 光标向上/下一行.
    g/G : 文档首/尾.
    / [字符串] : 查找字符串.
    n : 反向查找.
    h : 帮助.
    q : 退出less.
** ls [目录1] [目录2] ...  : 列出目录中的内荣.

    -a : 显示所有文件,包括隐藏文件.
    -l : 以长格式显示,包括权限,大小,修改时间等信息.
    -d : 显示目录本身的信息,而不是目录中的内容.
    -t : 按照文件的(访问, 修改, 属性变化)时间排序.(由新到旧)
    -lu : 显示文件最近被使用(读取)的时间.
    -lc : 显示最近文件属性信息(i-node)被修改的时间.
    -S : 按照文件的大小排序.(由大到小)
    -r : 反序列出文件.
    -h : 以便于阅读的方式显示文件大小信息.
    -F : 在列出的文件末尾加上特殊字符说明该文件种类.
    -i : 显示inode号.

** mkdir [目录1] [目录2] ... : 新建目录1,目录2,...
   -p : 连同创建父目录.
   -m : 设置目录的权限(默认为775).
   -v : 显示创建细节.

** rmdir [空目录] : 删除空目录.
** cd [目录] : 切换当前工作目录.

   绝对路径 : 起始于根目录.
   相对路径 : 起始于当前工作目录.
   "."  : 工作目录.(进入工作目录中的目录时,可以省略"./")
   ".." : 工作目录的父目录.
   "-"  : 前一个工作目录.相当于 "cd $OLDPWD". 每次切换目录时, 上次所在的目录都将保存到$OLDPWD环境变量中.
   "~"  : 当前用户的主目录.
   "~用户名" : 某个用户的主目录.
   
** cp 文件1 文件2;  cp 多个文件/目录 目录

   -a : 保留源文件所有属性.
   -i : 当目标文件已存在时,询问.(默认不询问,直接覆盖)
   -r : 拷贝目录.
   -u : 当目标文件不存在,或源文件比目标文件新时才拷贝.
   -v : 显示拷贝时的信息.
   
** mv 文件1 文件2; mv 多个文件/目录 目录
   -i : 如果目标文件存在,则询问.
   -u : 如果目标文件不存在,或比源文件旧,则更新.
   -v : 显示移动信息.
   
** rm [文件/目录]
   -i : 删除前要求确认.
   -r : (递归)删除目录.
   -f : 强制删除,忽略不存在文件.覆盖'-i'选项, 删除时不再需要确认.
   -v : 显示过程信息.

** ln [目标文件] [链接文件] : 为目标文件创立连接,默认为硬链接.
   -s(小写) : 创建符号链接,此时[目标文件]必须用绝对路径,或相对于[链接文件]的相对路径来描述.
   
** stat [文件名] : 查看文件的stat块信息.
   
* 路径操作

** pushd [目录] : 将指定目录压入目录栈顶, 并切换到该目录.

   注: 此命令用于切换目录.
   无参数时, 将交换栈最顶层的两个目录.
   -n : 只压栈, 不切换到该目录.
   +/-N(数字) : 将目录栈中, 左/右起第N个(从0开始)目录, 旋转至栈顶.

** popd : 将栈顶目录弹出, 并切换到下一个目录.
   
   注: 此命令用于删除目录.
   +/-N(数字) : 将目录栈中, 左/右起第N个(从0开始)目录删除.因为栈顶目录不变, 所以当前目录不变.
   
** dirs : 显示目录栈.

   -c : 清空目录栈.
   -v : 每行一个条目, 显示目录栈中目录, 并显示索引号.
   +/-N(数字) : 显示目录栈中, 左/右起第N个(从0开始)目录.
  

   
   
  

** $CDPATH变量
   设置cd命令的搜索路径.

* I/O 重定向
** 重定向
  重定向标准输入
  命令 < 文件 : 将标准输入重定向到指定文件.
  
  重定向标准输出
  命令 >(>>) 文件 : 将命令的输出结果(以追加方式)重定向到指定文件.(注: 使用'>',若命令为空,则会清除指定文件内容.)
   
  重定向标准错误
  命令 2>(2>>) 文件 : 将命令的出错信息(以追加方式)重定向到指定文件.(注: 使用'>',若命令为空,则会清除指定文件内容.)
   
  同时重定向标准输出和标准错误
  命令 &> 文件 : 将命令的输出结果及出错信息同时重定向到指定文件.
   
  cat file1 file2 ... : 将file1,file2,...输出到标准输出,若无文件参数,则从标准输入读取.(可通过重定向,将多个文件拼接成一个文件)
  /dev/null : 将输出重定向到这里表示丢弃.

  命令1 | 命令2 : 将命令1的输出通过管道作为命令2的输入.

** 过滤器
*** sort : 对文本行进行排序.并不改变文件本身.
    -r : 逆序输出.
*** uniq : 去除重复的行.
    -d : 只显示重复的行.
*** wc : 查看文本的行数, 单词数, 字节数.
    -l : 只显示行数.
    -w : 只显示单词数.
    -c : 只显示字节数."我"的字节数为3.
    -m : 只显示字符数."我"的字符数为1.
*** grep [pattern] [file1] [file2] ... : 输文件中包含"pattern"的行.
    -i : 忽略大小写.
    -v : 仅输出不匹配的行.
    -n : 输出行号.
    -c : 仅输出匹配的行数.
    -h : 查询多个文件时, 不显示文件名.
    -l/L : 仅列出匹配/未匹配的文件名, 不列出行.
    -E : 支持扩展正则表达式.
    -r : 递归搜索当前目录.
    -s : 不显示错误信息.

*** head/tail -n [数字] [文件] : 查看文件的前/后[数字]行(默认为10行).可用于管道.
*** tail -f [文件] : 即时输出文件变化后追加的数据.
*** tee : 将标准输入复制到每个指定文件,并显示到标准输出,常用于将pipe中的数据的分流到不同文件."-a":追加而非覆盖》
*** 常用组合
   ls -l [-R] [目录] | grep '^-' | wc -l : 统计某目录下普通文件的个数.[-R]表示包括子目录内的目录.
   ls -l [-R] [目录] | grep '^d' | wc -l : 统计某目录下目录文件的个数.[-R]表示包括子目录内的文件.
   
* 查看命令自身信息
** 查看命令所在位置

  which [命令名] : 查看命令的所在位置(只能用于查看可执行程序). '-a': 查看所有匹配的路径名.
  type [命令名] : 查看该命令所在位置及种类(可执行程序; shell内建命令; shell函数; 命令别名).
  whereis [命令名] : 查看命令的二进制程序, 源, 及其man page所在路径.

** 查看命令介绍

  whatis -l [命令名] : 查看命令的简单描述.
  apropos -l [关键词(正则表达式)] : 查看和该关键词有关的命令信息及其man编号. '-e': 精确匹配关键词.

** 别名
  alias [name='string'] : 为命令起别名.'='两边不允许有空格.
  alias : 查看系统内所有别名.
  unalias [别名] : 清除别名.

** 帮助

  help [shell内建命令] : 查看shell内建命令的帮助信息.
  [命令] --help : 查看命令的帮助信息.
  info coreutils : 查看系统的info文档.
  
  strace [命令名] : 查看该命令调用的系统调用.

**  man [编号] [命令名] : 查看命令的man page.
    [编号] : 1.用户命令
    2.系统内核接口
    3.c库接口
    4.设备和驱动文件
    5.文件格式
    6.游戏
    7.其他
    8.管理员命令

* 命令行扩展
  
  echo: 用于查看命令行的扩展.
    -e: 允许解析转义序列. 如: echo -e "time's up\a" 
    -n: 禁止输出末尾换行符.


** 通配符(路径扩展):
    [[[[:upper:]]]]* : 以大写字母开头的所有文件.
    .* : 所有隐藏文件.
    .[!.]?* : 同上,但不包括"."和"..".(以'.'开头,第二个i字符不是'.',至少两个字符,后面可以接任意字符)
    
** 波浪线扩展
   ~ : 当前用户的主目录.
   ~[user] : 指定用户的主目录.
   
** 算术扩展: $((expression))
   仅支持整数运算: +, -, *, /, **(指数)
   $(((5**2)*3)) = 75
   
** 花括号扩展:
   
   ','分隔不同的元素
   Front-{A,B,c}-Back :
   Front-A-Back Front-B-Back Front-C-Back
   
   '..'表示一个范围
   Number_{1..5} :
   Number_1 Number_2 Number_3 Number_4 Number_5

   {Z..A} :
   Z Y X W V U T S R Q P O N M L K J I H G F E D C B A

   花括号可以嵌套
   a{A{1,2},B{3,4}}b :
   aA1b aA2b aB3b aB4b
   
   主要用来产生具有特定格式的文件和目录
   mkdir {2007..2009}-0{1..9} {2007..2009}-{10..12}
   
** 变量扩展
   $变量名 : 若变量名不存在则扩展为空字符串.

** 命令替换
   允许将某个命令的输出设置为变量,作为另一个命令的参数:
   echo $(ls)
   ls -l $(which cp)
   file $(ls /usr/bin/* | grep zip) 

** 引号
   双引号: 空白字符在双引号内将保留自己的作用,而非作为分隔符.
   变量/转义字符仍会被扩展: echo "$USER $((2+2)) $(cal)"
   转义字符: \$, \&, \!, \\, 

   单引号: 将抑制所有扩展方式,将引号内的内容视为纯字符串.
   
* 权限

  id [user] : 查看指定用户的各种id.(不指定用户名,则默认为当前用户)
  su - [user] : 切换到user的账户下,并载入其操作环境.(不指定user则缺省为root). 使用exit命令返回到先前的用户.
  su - [user] -c '命令' : 登录到user账户执行命令后,退回到原用户. (一般: su - -c '命令', 表示登录到root账户执行命令)

  sudo '命令' : 按照事先配置好的权限执行命令,需要自身账户的密码. 在/etc/sudoers 配置权限.
  
  一般权限: 对文件和目录有不同的意义.
  'r' : 允许文件被打开和读取. 允许查看目录下的内容(同时要求对该目录有'x'权限).
  'w' : 允许文件被写入和截取. 允许在目录下生成/删除/重命名文件(同时要求对该目录有'x'权限).
  'x' : 允许文件作为可执行文件被执行. 允许进入(cd)该目录.
  
  特殊权限:
  setuid : 让该文件的执行者拥有该文件所有者(通常是root)的权限.
  setgid :
  
  

  文件类型
  '-' : 普通文件.
  'd' : 目录文件.
  'l' : 符号链接.(注: 所有符号链接文件所显示的读写权限都是"rwxrwxrwx",这是无意义的,其所指向的文件的权限才是有意义的)
  'c' : 字符设备文件.(如终端和modem)
  'b' : 块设备文件. (如硬盘和CD-ROM)

** chown : 改变文件的所有者(和组).
   
   chown owner file  将file的所有者改为owner,组不变.
   chown owner : group file  将file的所有者和组分别改为owner和group.
   chown :group file  将file的组改为group,所有者不变.
   chown owner: file  将file的所有者组改为owner,组改为owner登录时所在的组.

** chgrp : 改变文件的组.

   chgrp group file 将file的组改为group.
** chmod : 改变文件模式,只允许文件所有者或超级用户执行.

*** 八进制表示法:
   通过使用3个八进制数字,可以设定user,group,others的权限. 每个八进制数字分别对应权限:
   0  000  ---
   1  001  --x
   2  010  -w-
   3  011  -wx
   4  100  r--
   5  101  r-x
   6  110  rw-
   7  111  rwx 
   
   chmod 611 file1 file2 ... : 使file1, file2, ... 的模式变为'rw-r--r--'
   
*** 符号表示法:
   受影响的对象:
   u : user,用户,文件所有者.
   g : group,组,一个组里可以包含多名用户.
   o : others,其他人.
   a : all,所有人(ugo).

   操作:
   = : 设定权限.
   + : 添加权限.  
   - : 减少权限.
     
   chmod '对象'操作'权限' file1 file2 ... (如果不指定对象则默认为'a')
   例如:
   chmod u+x,go=rx file
   chmod -x file(等价于chmod a-x file)

*** 隐藏权限

    t(sticky bit): 目录的属性.当设置后, 该目录下的文件只有属主才能删除.
    
    

** umask : 当一个文件产生时,设置其默认权限.

   由4个八进制数字组成. 后三个八进制数字分别对应u,g,o,每一个表示从原始权限中对应位置应该去掉的权限.
   文件的原始权限为: rw-rw-rw-
   若umask 0|002 则表示: o-w           	 即 rw-rw-r--
   若umask 0|022 则表示: g-w,o-w       	 即 rw-r--r-- 
   若umask 0|266 则表示: u-w,g-rw,o-rw 	 即 r--r--r-- 
   若umask 0|777 则表示: a-rwx         	 即 --------- 

   大多数时间下,不必修改umask,在某些安全级别较高的场合下才需要修改.


* 进程
  C-c : 终止当前正在运行的前台任务.(对其发送INT信号)
  C-z : 挂起当前正在运行的前台进程.(对其发送信号)
  
  命令名 & : 在后台允许指定命令.(无法用C-c终止)
  
**  kill [-signal] PID/%jobnum : 向指定进程(可以有多个)发送指定信号.
    注:进程可以用PID或jobnum表示,信号可以用信号编号,信号名,或"SIG信号名"表示.
    必须是进程的所有者或root才能对进程发送信号.
    
    kill -l : 列出所有信号.
    常用signal:
           1 HUP : 
	   9 KILL : 强行终止进程(该信号无法被忽略).
	   15 TERM(terminate) : kill命令的默认发送的信号,将终止指定进程. 
	   
**  ps : 显示当前系统进程状态的快照. 

    无参数时,仅显示被当前终端控制的进程.
    
    -C [进程名] : 查看指定进程的信息.
    -a : 显示所有终端控制的进程.
    -u [用户名1],[用户名2], ... : 同时显示进程的(有效)用户.可以显示指定(有效)用户的进程.
    -U : 功能同上, 但显示进程的真实用户.以及选择真实用户.
    -f : 查看更加详细的信息.
    -L [PID] : 查看指定进程的线程.
    -x : 显示所有进程(包括没有终端控制的进程).
    --sort -/+pcpu : 按CPU使用率降/升序排序.
    --sort -/+pmem : 按内存占用率降/升序排序.

    例子: ps -aux --sort -pmem | head -10 : 查看内存占用量前10的进程.

    VSZ : 进程的虚拟大小.
    RSS : 占用内存中的页数.


**  pstree : 显示进程树.
**  jobs : 显示正在运行的任务,及其jobnum.
**  fg/bg %jobnum : 将具有jobnum的进程置于前台/后台运行.
**  top : 动态监视当前计算机内进程的状况.
**  其它命令: vmstat,xload,tload.
**  size : 查看可执行程序各个段的大小(字节).
    size [可执行文件] 
    输出为： 代码段, 初始化数据段, 未初始化数据段, 三段总和大小(十进制), 三段总和大小(十六进制)


* 系统监测

** watch [options] command

   周期性地(缺省为2s)运行命令command(command可以是由''包裹的命令管道组
   合), 并全屏显示其输出结果.

   -n [秒数]: 指定执行周期, 不允许小于0.1s.
   -d : 高亮显示command输出的不同之处.
   -g : 当command的输出发生变化时退出.
   -e : 当command发生错误时停止更新.

** vmstat


   输出结果:

   Procs:
   r: 正在运行或等待运行的进程数.
   b: 处于非中断睡眠的进程数.

   Memory:
   swpd:  系统所使用的虚拟内存量.
   free:  空闲内存量.
   buff:  作为buffers的内存量.
   cache: 作为cache的内存量.

   swap:
   si: 每秒内从交换区中读取的内存量.
   so: 每秒内向交换区中写入的内存量.

   IO:
   bi: 每秒内从块设备读取的块数(blocks/s).
   bo: 每秒内向块设备写入的块数(blocks/s).
   
   System:
   in: 每秒的中断次数(包括clock).
   cs: 每秒的上下文切换次数(包括clock).
   
   CPU:
   us: 用户空间所花时间.
   sy: 内核空间所化时间.
   id: 空转时间.
   wa: 等待I/O时间.
   st: Time stolen from a virtual machine.


* 环境变量
  printenv [环境变量]: 显示指定环境变量的值,如果未指定任何变量,则打印
  出所有变量的名称和值.
  
  set : 同时显示环境变量和shell变量.
  
  source .bashrc : 使更改立即生效.

** 常见环境变量
   PS1 : 命令行提示符格式.
   USER : 当前账户名.

* 磁盘管理
** 挂载
*** mount [-选项] [设备(分区)] [挂载点] : 将指定设备分区挂载到指定挂载点上.
    注:同一个设备同时可以挂载到多个挂载点上,挂载点可以是已存在的目录,挂载后该目录原有内容将不可见.
    可用 sudo tail -f /var/log/syslog 查看插入到系统的设备名. 
    无参数时,列出当前已挂载的文件系统.每当U盘,移动硬盘,cd-rom等具有文件系统的设备插入系统时,可以用此命令查看. 显示结果格式: 设备名 on 挂载点 type 文件系统类型 (选项)
    选项:
    -t 文件系统类型
    
*** umount [设备(分区)] : 卸载指定设备(该设备不能被占用).
    卸载设备意味着将剩余数据写回设备,若不卸载直接拔除,可能造成数据丢失.
    
** 文件系统
*** 磁盘分区(fdisk)
    首先需要将待分区设备卸载掉(umount).
    fdisk [设备名] : 必须是整个设备名(/dev/sdb),而非设备的某个分区(/dev/sdb1).
    m : 显示选项信息.
    p : 显示当前设备的分区表. 其中的Id表示分区类型.
    l : 显示支持的分区类型.(常用类型:b(W95 FAT32), 83(Linux))
    t : 改变分区的系统id(即分区类型,由l选项获取).
    w : 将对分区表的改动写入设备,使之生效.
    q : 不做任何更改,退出.

*** 创建文件系统(mkfs)
    mkfs -t [文件系统类型] [设备(分区)] : 在指定设备分区上创建指定的文件系统.
    
*** 检测及修复文件系统(fsck)
    fsck [文件系统所在分区] : 检测及修复指定文件系统,需要先umount.
    
*** 拷贝数据(dd)
    dd if=[输入文件] of=[输出文件] [bs=块大小 count=块数量] : 将输入文件中,count个bs大小的数据块,复制到输出文件中.
    
* 文件搜索
** loacate [pattern] : 搜索数据库中所有包含pattern的路径.
   locate搜索由'updatedb'命令建立数据库,该数据库每日更新一次.需要时可
   手动调用'updatedb'命令进行更新.(需要root权限)

   -i : 忽略大小写。
   -b : 只匹配文件名本身(路径的最后)。
   -w : 匹配整个路径名。(默认)
   -c : 只显示匹配的个数。
   

** find [目录] : 搜索指定目录下的文件.
*** 按文件名称   
    -name [pattern] : 搜索文件或目录,其名称匹配pattern. pattern为正则表达式,可以加""引用.
    -iname [pattern] : 同上. 大小写敏感.

*** 按文件修改时间
    -cmin/-mmin (+/-)N : 搜索文件或目录,其"内容或属性"/"内容"的修改时间,在当前时刻前的第N分钟(距离当前时刻大于/小于) N 分钟
    -ctime/-mtime (+/-)N : 功能同上. 时间节点变为N*24 hours.
    -cnewer/-newer [file] : 搜索文件或目录,其"内容或属性"/"内容"的修改时间晚于file的内容或属性的修改时间.

*** 按文件类型,大小
    -type [类型] : 按文件类型搜索. [类型]包括: b(块设备文件), c(字符设备文件), d(目录), f(普通文件), l(符号链接).
    -size (+/-)N [单位] : 搜索文件,其容量等于(大于/小于) N 单位. [单位]包括: b(512B)(默认单位), c(B), w(2B words), k(KB), M(MB), G(GB).
    -empty : 搜索空文件或目录.

*** 按用户或组
    -user/-group [id/name] : 搜索文件或目录,其user/group id/name 为 id/name.
    -nouser/-nogroup : 搜索那些不属于合法用户/组的文件或目录.

*** 按inode number
    -inum N : 搜索文件或目录, 其inode number为N.
    -samefile [file] : 搜索文件或目录,其inode number于文件file相同.

*** 按文件权限
    -perm [mode] : 搜索文件或目录其权限为mode(八进制或符号表示).

*** 逻辑操作
    -and(-a) : 逻辑"与".(没有逻辑操作符时,默认为逻辑"与").
    -or(-o)  : 逻辑"或".
    -not(!)  : 逻辑"非".
    (exp) : 

* 包管理
** apt-file

   在编译源代码时, 如果有缺少文件的情况发生, 通过 apt-file 可以找出该
   缺失文件所在的包，然后将缺失的包安装后即可。

   apt-file update : 更新apt-file数据库.
   apt-file search [file] : 找出该缺失文件所属的包.
   apt-file list [package] : 列出包内的文件.
   
** 更新
  
   (sudo) apt-get update : 更新本地包数据库.执行任何其它操作前都应该执行该操作.
    
   (sudo) apt-get upgrade : 保守更新, 只更新那些不需要改动其它组件的包.
   (sudo) apt-get dist-upgrade : 彻底更新, 将自动处理相关组件的改动.(-s可
   模拟更新过程;-y将默认同意所有选项, 不再提示用户)

** 查看包信息

   apt-cache search [package] : 在本地包数据库中搜索指定软件包(无需sudo).
   apt-cache policy [package] : 查看已安装的(如果有), 及可用的软件包版本.
   
   apt-cache show [package] : 查看指定软件包的详细信息.
   apt-cache showpkg [package] : 查看指定软件包的与其它包的关系.
   dpkg --s [package] : 查看已安装软件包的详细信息.


   dpkg -l [pattern] : 列出系统中所有匹配[pattern]的安装包的状态. 不加
   [pattern] 将列出所有包的状态.

   dpkg -L [package] : 列出指定软件包(已安装)在当前系统上所关联的文件.
   dpkg -S [file] : 查看指定文件属于哪个软件包. 一旦文件在安装后被移动,
   则无法追踪其包.

   dpkg --get-selections [pattern] : 列出所有匹配[pattern]的已安装的或
   保留配置文件的包. 不加[pattern]将列出所有已安装包.

   apt-cache depends [package] : 查看指定包所依赖的包.
   apt-cache rdepends [package] : 查看所有依赖于指定包的包.

   dpkg --info [package.deb] : 查看指定.deb包的详细详细.

** 安装包

   (sudo) apt-get install [package] : 安装指定软件包及其依赖. 可以同时
   安装多个包, 用空白分割.(-s可模拟安装过程; -y将默认同意所有选项, 不
   再提示用户)
   
   (sudo) apt-get install [package=version] : 安装软件包的指定版本.

   (sudo) dpkg --install [package.deb] : 安装.deb包, 并取代以前的版本
   (若已经安装过),但不解决依赖关系, 若出现任何依赖问题, 安装将失败.
   
   (sudo) apt-get install -f : 尝试修复安装包时的依赖问题(通常用于解决
   dpkg安装.deb包时的依赖问题).
   
   (sudo) dpkg-reconfigure [package] : 在安装好包后, 对其进行再配置.
   
   (sudo) taskel : 查看可以安装的软件合集.
   taskel --list-task : 列出可用的软件合集.
   (sudo) taskel install [task] : 安装指定的软件合集.

** 下载包
   
   apt-get download [package] : 将软件包下载到当前目录中, 并不安装.
   (sudo) apt-get source [package] : 下载指定包的源文件(需要配置源).

** 删除

   (sudo) apt-get remove [package]: 删除指定软件包,但保留配置文件.
   (sudo) apt-get purge [package]: 删除指定软件包,同时删除配置文件.

   (sudo) apt-get autoremove : 自动清除无用的包及其依赖关系.(加--purge
   将同时删除其配置文件)

   (sudo) apt-get autoclean : 删除本地已经过期的包(.deb).

   dpkg --search [文件名] : 查看指定文件是哪个软件包安装的.

** 备份和移植

   dpkg --get-selections > packagelist : 将当前系统中的包列表保存在
   packagelist中, 用于备份或移植到其它系统中.

   sudo apt-key add [keyfile] : 添加密钥.
   


* 时间和日期

  date : 显示当前日期和时间.
  cal : 显示当前月份的日历.

  last reboot: 查看系统最近的重启时间和日期.
  last -x : 查看系统运行级别及关机时间.

* 查看系统资源

  free : 查看内存使用状况.
  df : 产看磁盘使用状况.
			
* 通配符

  注:通配符即可用于文件名也可用于文件路径.

  '*' : 匹配任意多个字符.
  '?' : 匹配任意一个字符.
  [字符集] : 匹配任一个属于字符集中的字符.
  [!字符集] : 匹配任一个不属于字符集中的字符.
  [字符类] : 匹配任一个属于字符类的字符.

  字符类: 一定要放在"[]"中使用.
  [:alnum:] : 任意字母或数字.
  [:alpha:] : 任意字母.
  [:digit:] : 任意数字.
  [:lower:] : 任意小写字母.
  [:upper:] : 任意大写字母.
   
* 常用目录及文件
**  /bin        : 存放用于系统启动和运行的二进制文件.
**  /boot    	: 存放linux内核文件,boot loader.
  /boot/vmlin	uz : linux 内核文件.
  /boot/grub/	grub.cfg : 用于配置boot loader.

**  /dev     	: 存放设备文件.
**  /etc     	: 存放系统配置文件.
    /etc/crontab : 设置自动化工作的运行时间.
    /etc/fstab : 配置存储器及其挂载点.启动时自动挂载.
    (设备名,挂载点,文件系统类型,挂载选项,是否或何时由dump备份, 每当启动时被fsck检测的顺序(为0则不被检测).)
    
    /etc/passwd : 用户账户列表.
    /etc/group  : 组群列表.
    /etc/shadow : 用户密码.
**  /usr/bi     : 存放可执行文件目录.
**  /lib        : 存放核心系统程序所使用的共享库文件.
**  /lost+found : 对文件系统进行恢复后,保存恢复的文件,一般情况下为空.
    一般位于该文件系统的根目录下,由fsck产生.
**  /media      : 现代linux系统中可移动媒体设备的自动挂载点.
**  /mnt        : 老的linux系统中可移动媒体设备的手动挂载点.
**  /opt        : 主要用于安装可选择的商业软件.
**  /proc       : 内核虚拟文件系统.
**  /root       : root账户的主目录.
**  /sbin       : 用于存放用于系统管理的可执行制程序.    
**  /tmp        : 用于存放临时文件.
**  /usr        : 放置大部分用户应用程序.
    /usr/bin    : 放置linux发行版自带的可执行程序.
    /usr/lib    : /usr/bin中程序所用的共享库.
    /usr/local  : 结构类似于/usr,但放置不是发行版自带的程序,而是后来安装的用于适用于全系统范围的应用程序.
    /usr/sbin   : 放置其他一些用于系统管理的可执行程序. 
    /usr/share  : 存放/usr/bin中程序所用的共享数据,例如：配置文件,图标,屏幕背景,声音文件等.
    /usr/share/doc : 放置已安装程序的文档.
    /usr/share/applications/default.lst : 
**  /var        : 放置可变数据,如日至,数据库,email等.
    /var/log    : 系统日至目录.
    /var/log/syslog : 系统日至.

* 网络
  ping [hostname] : 向host持续发送数据包,直到终止该命令.
  traceroute [hostname] : 显示从当前主机到host所经过的所有路由.
** netstat : 查看网络设置和统计信息.
    -ie : 查看网络接口(网卡)信息.
    -r  : 查看内核的路由表.

** wget : 下载工具
   
* 压缩/解压
** 压缩

*** rar

    
** 解压
***  unzip [options] [文件] 
     
     默认解压到当前目录下, 保存压缩包原有的目录结构. 不自动创建解压目
     录, 需要用-d选项创建.

     -d [目录] : 解压到指定目录(可以事先不存在, 解压时自动创建).
     -n : 自动跳过已有文件(且不再询问).
     -o : 覆盖已有文件(且不再询问).
     -P [密码] : 设置密码.
     -q : 静默模式, 不显示解压过程中的信息.

*** unrar [options] [switches] [文件]
   
    解压时将自动创建与文件同名的解压目录. 

    1. options:
    x: 解压文件到当前目录, 保存原始压缩文档的目录结构(常用).
    l: 列出压缩包内的文件.

    2. switches:
    -o+ : 覆盖已有文件.
    -o- : 不覆盖已有文件.
    -p[密码] : 设置密码.
    -y: 默认所有询问均选择yes.

* 其它
  
  who : 查看当前已登录用户.
  clear : 清屏,等价于"C-l".
  sleep n : 让系统等待n秒钟.

* 账户密码

  sudo passwd [用户名] : 改变指定用户的密码(需要root权限). 缺省为改变
  当前用户的密码. 注:用root账户修改密码可以无视对密码形式的限制.

  sudo passwd [root] : 改变root账户密码.

  

* 文本分割
 
** split: 将大文件分割成若干小文件.
   split -l/-b [待分割文件名] [分割后文件前缀]
   -l 行数: 按指定行数分割. 
   -b 大小: 按指定大小分割.
   例:
   split [-l 50/-b 1m] file splited_file
   会将file按50行/1mb进行分割.产生的文件为: splitted_filea, splitted_fileb, splitted_filec,...

* 文件比较

  cmp file1 file2 : 比较file1和file2,输出第一处不相同的位置.
  用于判断两个文件是否相同.速度较快,可用于任何文件类型.

  diff file1 file2 : 输出两个文件所有不相同的地方.用于查看文件差异,
  只能用于文本文件.

* 查看文件内容

**  od : 查看文件的字节.
    -c : 以可视字符形式显示文件中的每一个字节.
    -b/x : 以八/十六进制数显示文件每一个字节.
    以上选项可以叠加使用.

**  pr file1 file2 ... : 按页显示所有文件内容.

* SSH

** 开启ssh服务
   
   本机要对外提供ssh服务(允许别的主机ssh登录到本机), 需要安装
   opssh-server程序.

   1. 用 'ps -ef | grep ssh' 查看是否有'sshd'服务运行.
   2. 若没有, 则执行'sudo service ssh start', 若找不到该命令, 则执行
      `sudo apt-get install openssh-server`安装相应服务, 然后在启动服
      务.
      
** 免密登录
   
   若a@A想登录b@B, 则将A:/home/a/.ssh/id_rsa.pub拷贝到B:
   /home/b/.ssh/authorized_keys中即可.

   产生公钥:
   ssh-keygen -t rsa (之后按三次回车即可).

** 登录
   ssh -p [端口]  [账户名]@[远程ssh服务器IP]

** 传输文件

   无需ssh到远程主机.

   上传本地文件： scp -P [端口]  [本地文件/目录] [账户名]@[远程ssh服务器IP]:[服务器目录] 
   下载服务器文件： scp -P [端口] [账户名]@[远程ssh服务器IP]:[服务器文件] [本地目录] 


   
** 更改本机ssh端口

   在配置文件：/etc/ssh/ssh_config中更改Port项。需要root权限。

* 更换内核
  
  修改配置文件 /etc/default/grub 中的GRUB_DEFAULT项, 使其为
  GRUB_DEFAULT=N, 其中N(默认为0)为GRUB配置界面中相应版本内核的序号, 内
  核一般按版本号由高到低排列.

  或者开机时按ESC键, 进入GRUB配置界面, 选择相应的内核.
* 查看系统信息
** 查看内核版本

   uname -a

** 查看发行版版本

   sudo lsb_release -a
   cat /etc/issue

** 查看CPU信息

   cat /proc/cpuinfo

* Systemd

  systemctl --version : 查看Systemd的版本.

  systemd-analyze : 查看系统引导总用时.
  systemd-analyze blame : 列出每项服务的初始化用时.
  
  systemctl : 列出所有正在运行的单元.
  systemctl --failed : 列出所有运行失败的单元.

** 列出服务

   systemctl list-unit-files : 列出系统上所有单元.
   --type=service | grep enabled : 列出所有开机启动的服务.

** 禁用服务

   sudo systemctl stop [服务(可以是多个)] : 终止某项正在运行的服务.
   sudo systemctl disable [服务(可以是多个)] : 禁止开机启动某服务.
   sudo systemctl mask [服务(可以是多个)] : 永久禁用某服务(但不卸载).
   sudo systemctl unmask [服务(可以是多个)] : 以上操作的逆造作.

   下列服务不能禁用:
   accounts-daemon.service : 禁用后无法进入桌面环境.

** 查看服务状态

    systemctl status [服务] : 查看某项服务的状态信息.

